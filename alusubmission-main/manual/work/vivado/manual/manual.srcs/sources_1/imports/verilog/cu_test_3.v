/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module cu_test_3 (
    input clk,
    input rst,
    input button,
    input [1:0] selector,
    output reg [15:0] out,
    output reg [7:0] counter_out
  );
  
  
  
  reg [7:0] M_counter_d, M_counter_q = 1'h0;
  wire [16-1:0] M_cu_score;
  wire [16-1:0] M_cu_positionl1;
  wire [16-1:0] M_cu_positionl2;
  wire [16-1:0] M_cu_reg_eleven;
  wire [1-1:0] M_cu_debug_slowclock;
  wire [16-1:0] M_cu_statedebug;
  wire [16-1:0] M_cu_wdsel_output;
  wire [4-1:0] M_cu_write_addr;
  reg [1-1:0] M_cu_button;
  game_beta_9 cu (
    .clk(clk),
    .rst(rst),
    .button(M_cu_button),
    .score(M_cu_score),
    .positionl1(M_cu_positionl1),
    .positionl2(M_cu_positionl2),
    .reg_eleven(M_cu_reg_eleven),
    .debug_slowclock(M_cu_debug_slowclock),
    .statedebug(M_cu_statedebug),
    .wdsel_output(M_cu_wdsel_output),
    .write_addr(M_cu_write_addr)
  );
  
  always @* begin
    M_counter_d = M_counter_q;
    
    M_cu_button = button;
    out = 16'hf001;
    
    case (selector)
      2'h0: begin
        out = M_cu_wdsel_output;
      end
      2'h1: begin
        out = M_cu_reg_eleven;
      end
      2'h2: begin
        out = M_cu_statedebug;
      end
      2'h3: begin
        out = M_cu_write_addr;
      end
    endcase
    if (button == 1'h1) begin
      if (M_counter_q == 8'hff) begin
        M_counter_d = 1'h0;
      end else begin
        M_counter_d = M_counter_q + 1'h1;
      end
    end
    counter_out = M_counter_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_counter_q <= 1'h0;
    end else begin
      M_counter_q <= M_counter_d;
    end
  end
  
endmodule
